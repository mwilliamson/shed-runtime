module sequenceables;

members {
    head,
    any,
    all,
    Sequenceable
}

import sequences;

def head fun[T] => (sequenceable: Sequenceable[T]) =>
    sequences.head[T](sequenceable.toSequence());

def any fun[T] => (predicate: Function[T, Boolean], sequenceable: Sequenceable[T]) =>
    sequences.any[T](predicate, sequenceable.toSequence());

def all fun[T] => (predicate: Function[T, Boolean], sequenceable: Sequenceable[T]) =>
    sequences.all[T](predicate, sequenceable.toSequence());

def Sequenceable class[T] => () => {}
